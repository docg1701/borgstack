# ============================================================================
# BorgStack - Environment Variables Template
# ============================================================================
#
# IMPORTANT: This is a template file. DO NOT commit the actual .env file!
#
# Setup Instructions:
# 1. Copy this file to .env: cp .env.example .env
# 2. Replace all placeholder values with your actual configuration
# 3. Ensure .env has restricted permissions: chmod 600 .env
# 4. Never commit .env to version control (already in .gitignore)
#
# Security Best Practices:
# - Use strong, unique passwords (minimum 32 characters recommended)
# - Use a password manager to generate secure passwords
# - Rotate credentials regularly
# - Never share credentials via email or chat
# - Use different passwords for each service
#
# ============================================================================

# ============================================================================
# PostgreSQL Database (Shared)
# ============================================================================
# PostgreSQL is the primary relational database shared by n8n, Chatwoot,
# Directus, and Evolution API. Uses pgvector extension for AI/LLM features.
#
# Version: PostgreSQL 18.0 with pgvector extension

# Master PostgreSQL admin password
# Used by the postgres superuser account
POSTGRES_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# n8n database credentials
# Database name: n8n_db
N8N_DB_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# Chatwoot database credentials
# Database name: chatwoot_db
CHATWOOT_DB_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# Directus database credentials
# Database name: directus_db
DIRECTUS_DB_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# Evolution API database credentials
# Database name: evolution_db
EVOLUTION_DB_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# ============================================================================
# MongoDB Database (Lowcoder Only)
# ============================================================================
# MongoDB is used exclusively by Lowcoder for its metadata storage.
# Isolated from other services to prevent schema conflicts.
#
# Version: MongoDB 7.0

# MongoDB root admin credentials
MONGO_INITDB_ROOT_USERNAME=mongoadmin
MONGO_INITDB_ROOT_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# Lowcoder MongoDB connection string
# Format: mongodb://username:password@mongodb:27017/lowcoder_db?authSource=admin
LOWCODER_MONGODB_URL=mongodb://mongoadmin:CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS@mongodb:27017/lowcoder_db?authSource=admin

# ============================================================================
# Redis Cache/Queue (Shared)
# ============================================================================
# Redis is used for session management, caching, and message queuing across
# all services. Shared to reduce infrastructure complexity.
#
# Version: Redis 8.2 (Alpine)
# Allocation: 8GB memory, optimized for 36GB RAM server
# Persistence: RDB snapshots + AOF (max 1 second data loss)
#
# Service Usage:
#   - n8n:      Session management, Bull queue processing (DB 0)
#   - Chatwoot: Session management, Sidekiq background jobs (DB 0)
#   - Lowcoder: Session storage (DB 0)
#   - Directus: Caching layer (DB 0)
#
# Connection String Formats (used automatically by service configurations):
#   Standard format: redis://:${REDIS_PASSWORD}@redis:6379
#   n8n format:      QUEUE_BULL_REDIS_HOST=redis QUEUE_BULL_REDIS_PORT=6379 QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
#   Chatwoot format: REDIS_HOST=redis REDIS_PORT=6379 REDIS_PASSWORD=${REDIS_PASSWORD}
#   Lowcoder format: LOWCODER_REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
#   Directus format: REDIS_HOST=redis REDIS_PORT=6379 REDIS_PASSWORD=${REDIS_PASSWORD}
#
# Security:
#   - Network isolation: Redis only accessible via borgstack_internal network
#   - Password authentication: Required for all connections
#   - No port exposure: Redis not accessible from host machine

# Redis password (minimum 32 characters recommended)
# Generate secure password: openssl rand -base64 32
# Used for all Redis operations and service connections
REDIS_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# ============================================================================
# Domain Configuration
# ============================================================================
# Configure your domain names for each service. Caddy will automatically
# provision SSL/TLS certificates via Let's Encrypt.
#
# Format: Use fully qualified domain names (FQDN)
# Example: n8n.example.com
#
# DNS Requirements:
# - All domains must point to your server's public IP address
# - Ensure ports 80 and 443 are accessible for Let's Encrypt validation

# Primary domain (base domain for the stack)
BORGSTACK_DOMAIN=borgstack.example.com

# n8n - Workflow automation platform
N8N_DOMAIN=n8n.example.com

# Chatwoot - Customer communication platform
CHATWOOT_DOMAIN=chatwoot.example.com

# Evolution API - WhatsApp Business API gateway
EVOLUTION_DOMAIN=evolution.example.com

# Lowcoder - Low-code application builder
LOWCODER_DOMAIN=lowcoder.example.com

# Directus - Headless CMS and data management
DIRECTUS_DOMAIN=directus.example.com

# FileFlows - Automated media processing
FILEFLOWS_DOMAIN=fileflows.example.com

# Duplicati - Backup management
DUPLICATI_DOMAIN=duplicati.example.com

# ============================================================================
# Service-Specific Configuration
# ============================================================================

# ----------------------------------------------------------------------------
# n8n Configuration
# ----------------------------------------------------------------------------
# Workflow automation platform configuration

# n8n basic authentication (initial admin account)
# Change these after first login via n8n web interface
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# n8n encryption key (used for encrypting credentials in database)
# Generate with: openssl rand -hex 32
N8N_ENCRYPTION_KEY=CHANGE_ME_TO_A_64_CHARACTER_HEX_STRING

# n8n webhook URL (should match N8N_DOMAIN)
N8N_WEBHOOK_URL=https://n8n.example.com

# ----------------------------------------------------------------------------
# Chatwoot Configuration
# ----------------------------------------------------------------------------
# Customer communication platform configuration

# Chatwoot secret key base (used for encryption)
# Generate with: openssl rand -hex 64
CHATWOOT_SECRET_KEY_BASE=CHANGE_ME_TO_A_128_CHARACTER_HEX_STRING

# Chatwoot initial admin account
CHATWOOT_ADMIN_EMAIL=admin@example.com
CHATWOOT_ADMIN_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# ----------------------------------------------------------------------------
# Evolution API Configuration
# ----------------------------------------------------------------------------
# WhatsApp Business API gateway configuration

# Evolution API authentication
EVOLUTION_API_KEY=CHANGE_ME_TO_A_SECURE_API_KEY

# Evolution API encryption key
EVOLUTION_ENCRYPTION_KEY=CHANGE_ME_TO_A_64_CHARACTER_HEX_STRING

# ----------------------------------------------------------------------------
# Directus Configuration
# ----------------------------------------------------------------------------
# Headless CMS configuration

# Directus admin credentials (initial admin account)
DIRECTUS_ADMIN_EMAIL=admin@example.com
DIRECTUS_ADMIN_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# Directus key and secret (used for JWT tokens)
# Generate with: openssl rand -hex 32
DIRECTUS_KEY=CHANGE_ME_TO_A_64_CHARACTER_HEX_STRING
DIRECTUS_SECRET=CHANGE_ME_TO_A_64_CHARACTER_HEX_STRING

# ----------------------------------------------------------------------------
# SeaweedFS Configuration
# ----------------------------------------------------------------------------
# S3-compatible object storage configuration

# SeaweedFS admin credentials
SEAWEEDFS_ADMIN_USER=admin
SEAWEEDFS_ADMIN_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# S3 access credentials
SEAWEEDFS_S3_ACCESS_KEY=CHANGE_ME_TO_A_20_CHARACTER_ACCESS_KEY
SEAWEEDFS_S3_SECRET_KEY=CHANGE_ME_TO_A_40_CHARACTER_SECRET_KEY

# ----------------------------------------------------------------------------
# FileFlows Configuration
# ----------------------------------------------------------------------------
# Automated media processing configuration

# FileFlows admin credentials
FILEFLOWS_ADMIN_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# ----------------------------------------------------------------------------
# Duplicati Configuration
# ----------------------------------------------------------------------------
# Backup management configuration

# Duplicati web UI password
DUPLICATI_ADMIN_PASSWORD=CHANGE_ME_TO_A_SECURE_PASSWORD_MIN_32_CHARS

# Duplicati backup encryption passphrase
DUPLICATI_BACKUP_PASSPHRASE=CHANGE_ME_TO_A_SECURE_PASSPHRASE_STORE_SAFELY

# ============================================================================
# Backup Configuration
# ============================================================================
# Configure external backup destinations (optional)

# Example: S3-compatible storage
# BACKUP_S3_ENDPOINT=https://s3.amazonaws.com
# BACKUP_S3_BUCKET=borgstack-backups
# BACKUP_S3_ACCESS_KEY=YOUR_ACCESS_KEY
# BACKUP_S3_SECRET_KEY=YOUR_SECRET_KEY

# Example: FTP/SFTP
# BACKUP_FTP_HOST=ftp.example.com
# BACKUP_FTP_USERNAME=backup_user
# BACKUP_FTP_PASSWORD=CHANGE_ME

# ============================================================================
# Email Configuration (Optional)
# ============================================================================
# Configure SMTP for email notifications from services

# SMTP server configuration
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USERNAME=notifications@example.com
# SMTP_PASSWORD=CHANGE_ME
# SMTP_FROM_EMAIL=noreply@example.com
# SMTP_FROM_NAME=BorgStack

# ============================================================================
# Advanced Configuration
# ============================================================================

# Timezone (default: UTC)
TZ=UTC

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# ============================================================================
# End of Configuration
# ============================================================================
